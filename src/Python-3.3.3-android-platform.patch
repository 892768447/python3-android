diff -ru Python-3.3.3/configure.ac Python-3.3.3-android/configure.ac
--- Python-3.3.3/configure.ac   2014-08-02 01:54:41.986245462 +0000
+++ Python-3.3.3-android/configure.ac   2014-08-02 13:10:01.526155957 +0000
@@ -363,6 +363,9 @@
        # a lot of different things including 'define_xopen_source'
        # in the case statement below.
        case "$host" in
+       *-*-linux-androideabi*)
+               ac_sys_system=Linux-Android
+               ;;
        *-*-linux*)
                ac_sys_system=Linux
                ;;
@@ -391,6 +394,7 @@
     MACHDEP="$ac_md_system$ac_md_release"
 
     case $MACHDEP in
+       linux-android*) MACHDEP="linux-android";;
        linux*) MACHDEP="linux";;
        cygwin*) MACHDEP="cygwin";;
        darwin*) MACHDEP="darwin";;
diff -ru Python-3.3.3/configure Python-3.3.3-android/configure
--- Python-3.3.3/configure      2014-08-02 13:16:25.154155109 +0000
+++ Python-3.3.3-android/configure      2014-08-02 13:20:11.970154608 +0000
@@ -3271,6 +3271,9 @@
        # a lot of different things including 'define_xopen_source'
        # in the case statement below.
        case "$host" in
+       *-*-linux-androideabi*)
+               ac_sys_system=Linux-Android
+               ;;
        *-*-linux*)
                ac_sys_system=Linux
                ;;
@@ -3299,6 +3302,7 @@
     MACHDEP="$ac_md_system$ac_md_release"
 
     case $MACHDEP in
+       linux-android*) MACHDEP="linux-android";;
        linux*) MACHDEP="linux";;
        cygwin*) MACHDEP="cygwin";;
        darwin*) MACHDEP="darwin";;
diff -Nru Python-3.3.3/Lib/plat-linux-android/DLFCN.py Python-3.3.3-android/Lib/plat-linux-android/DLFCN.py
--- Python-3.3.3/Lib/plat-linux-android/DLFCN.py	1970-01-01 00:00:00.000000000 +0000
+++ Python-3.3.3-android/Lib/plat-linux-android/DLFCN.py	2014-08-02 14:22:53.950146298 +0000
@@ -0,0 +1,111 @@
+# Generated by h2py from /usr/src/unprivcompile/python-android/build-tools/sysroot/usr/include/dlfcn.h
+
+# Included from sys/cdefs.h
+
+# Included from sys/cdefs_elf.h
+def _C_LABEL(x): return __CONCAT(_,x)
+
+def _C_LABEL(x): return x
+
+def _C_LABEL_STRING(x): return x
+
+def ___RENAME(x): return __asm__(___STRING(_C_LABEL(x)))
+
+def ____RENAME(x): return __asm__(___STRING(x))
+
+def ___RENAME(x): return __asm__(___STRING(x))
+
+def __weak_extern(sym): return \
+
+def ___weak_extern(sym): return \
+
+def __weak_extern(sym): return \
+
+def __RCSID(_s): return __IDSTRING(rcsid,_s)
+
+def __COPYRIGHT(_s): return \
+
+def __link_set_count(set): return \
+
+def ___STRING(x): return __STRING(x)
+
+def __P(protos): return protos		 
+
+def __STRING(x): return #x
+
+def __P(protos): return ()		 
+
+def __STRING(x): return "x"
+
+def __attribute__(x): return  
+
+def __aligned(x): return __attribute__((__aligned__(x)))
+
+def __section(x): return __attribute__((__section__(x)))
+
+def __aligned(x): return  
+
+def __section(x): return  
+
+def __statement(x): return __extension__(x)
+
+def __statement(x): return (0)
+
+def __statement(x): return (x)
+
+__func__ = ""
+def __RENAME(x): return ___RENAME(x)
+
+def __RENAME(x): return __symbolrename(x)
+
+def __predict_true(exp): return __builtin_expect((exp) != 0, 1)
+
+def __predict_false(exp): return __builtin_expect((exp) != 0, 0)
+
+def __predict_true(exp): return (exp)
+
+def __predict_false(exp): return (exp)
+
+_POSIX_C_SOURCE = 199009
+_POSIX_C_SOURCE = 199209
+__XSI_VISIBLE = 700
+_POSIX_C_SOURCE = 200809
+__XSI_VISIBLE = 600
+_POSIX_C_SOURCE = 200112
+__XSI_VISIBLE = 500
+_POSIX_C_SOURCE = 199506
+_POSIX_C_SOURCE = 198808
+__POSIX_VISIBLE = 200809
+__ISO_C_VISIBLE = 1999
+__POSIX_VISIBLE = 200112
+__ISO_C_VISIBLE = 1999
+__POSIX_VISIBLE = 199506
+__ISO_C_VISIBLE = 1990
+__POSIX_VISIBLE = 199309
+__ISO_C_VISIBLE = 1990
+__POSIX_VISIBLE = 199209
+__ISO_C_VISIBLE = 1990
+__POSIX_VISIBLE = 199009
+__ISO_C_VISIBLE = 1990
+__POSIX_VISIBLE = 198808
+__ISO_C_VISIBLE = 0
+__POSIX_VISIBLE = 0
+__XSI_VISIBLE = 0
+__BSD_VISIBLE = 0
+__ISO_C_VISIBLE = 1990
+__POSIX_VISIBLE = 0
+__XSI_VISIBLE = 0
+__BSD_VISIBLE = 0
+__ISO_C_VISIBLE = 1999
+__POSIX_VISIBLE = 200809
+__XSI_VISIBLE = 700
+__BSD_VISIBLE = 1
+__ISO_C_VISIBLE = 1999
+__XPG_VISIBLE = 700
+__POSIX_VISIBLE = 200809
+__ISO_C_VISIBLE = 1999
+__BSD_VISIBLE = 1
+__BIONIC__ = 1
+
+# Included from android/api-level.h
+__ANDROID_API__ = 19
diff -Nru Python-3.3.3/Lib/plat-linux-android/IN.py Python-3.3.3-android/Lib/plat-linux-android/IN.py
--- Python-3.3.3/Lib/plat-linux-android/IN.py	1970-01-01 00:00:00.000000000 +0000
+++ Python-3.3.3-android/Lib/plat-linux-android/IN.py	2014-08-02 14:22:53.946146298 +0000
@@ -0,0 +1,714 @@
+# Generated by h2py from /usr/src/unprivcompile/python-android/build-tools/sysroot/usr/include/netinet/in.h
+
+# Included from endian.h
+
+# Included from sys/endian.h
+
+# Included from sys/cdefs.h
+
+# Included from sys/cdefs_elf.h
+def _C_LABEL(x): return __CONCAT(_,x)
+
+def _C_LABEL(x): return x
+
+def _C_LABEL_STRING(x): return x
+
+def ___RENAME(x): return __asm__(___STRING(_C_LABEL(x)))
+
+def ____RENAME(x): return __asm__(___STRING(x))
+
+def ___RENAME(x): return __asm__(___STRING(x))
+
+def __weak_extern(sym): return \
+
+def ___weak_extern(sym): return \
+
+def __weak_extern(sym): return \
+
+def __RCSID(_s): return __IDSTRING(rcsid,_s)
+
+def __COPYRIGHT(_s): return \
+
+def __link_set_count(set): return \
+
+def ___STRING(x): return __STRING(x)
+
+def __P(protos): return protos		 
+
+def __STRING(x): return #x
+
+def __P(protos): return ()		 
+
+def __STRING(x): return "x"
+
+def __attribute__(x): return  
+
+def __aligned(x): return __attribute__((__aligned__(x)))
+
+def __section(x): return __attribute__((__section__(x)))
+
+def __aligned(x): return  
+
+def __section(x): return  
+
+def __statement(x): return __extension__(x)
+
+def __statement(x): return (0)
+
+def __statement(x): return (x)
+
+__func__ = ""
+def __RENAME(x): return ___RENAME(x)
+
+def __RENAME(x): return __symbolrename(x)
+
+def __predict_true(exp): return __builtin_expect((exp) != 0, 1)
+
+def __predict_false(exp): return __builtin_expect((exp) != 0, 0)
+
+def __predict_true(exp): return (exp)
+
+def __predict_false(exp): return (exp)
+
+_POSIX_C_SOURCE = 199009
+_POSIX_C_SOURCE = 199209
+__XSI_VISIBLE = 700
+_POSIX_C_SOURCE = 200809
+__XSI_VISIBLE = 600
+_POSIX_C_SOURCE = 200112
+__XSI_VISIBLE = 500
+_POSIX_C_SOURCE = 199506
+_POSIX_C_SOURCE = 198808
+__POSIX_VISIBLE = 200809
+__ISO_C_VISIBLE = 1999
+__POSIX_VISIBLE = 200112
+__ISO_C_VISIBLE = 1999
+__POSIX_VISIBLE = 199506
+__ISO_C_VISIBLE = 1990
+__POSIX_VISIBLE = 199309
+__ISO_C_VISIBLE = 1990
+__POSIX_VISIBLE = 199209
+__ISO_C_VISIBLE = 1990
+__POSIX_VISIBLE = 199009
+__ISO_C_VISIBLE = 1990
+__POSIX_VISIBLE = 198808
+__ISO_C_VISIBLE = 0
+__POSIX_VISIBLE = 0
+__XSI_VISIBLE = 0
+__BSD_VISIBLE = 0
+__ISO_C_VISIBLE = 1990
+__POSIX_VISIBLE = 0
+__XSI_VISIBLE = 0
+__BSD_VISIBLE = 0
+__ISO_C_VISIBLE = 1999
+__POSIX_VISIBLE = 200809
+__XSI_VISIBLE = 700
+__BSD_VISIBLE = 1
+__ISO_C_VISIBLE = 1999
+__XPG_VISIBLE = 700
+__POSIX_VISIBLE = 200809
+__ISO_C_VISIBLE = 1999
+__BSD_VISIBLE = 1
+__BIONIC__ = 1
+
+# Included from android/api-level.h
+__ANDROID_API__ = 19
+
+# Included from machine/endian.h
+from TYPES import *
+
+# Included from machine/_types.h
+_LITTLE_ENDIAN = 1234
+_BIG_ENDIAN = 4321
+_PDP_ENDIAN = 3412
+LITTLE_ENDIAN = _LITTLE_ENDIAN
+BIG_ENDIAN = _BIG_ENDIAN
+PDP_ENDIAN = _PDP_ENDIAN
+def __swap16gen(x): return \
+
+def __swap32gen(x): return \
+
+def __swap64gen(x): return \
+
+__swap16 = __swap16gen
+__swap32 = __swap32gen
+__swap64 = __swap64gen
+swap16 = __swap16
+swap32 = __swap32
+swap64 = __swap64
+_QUAD_HIGHWORD = 1
+_QUAD_LOWWORD = 0
+htobe16 = __swap16
+htobe32 = __swap32
+htobe64 = __swap64
+betoh16 = __swap16
+betoh32 = __swap32
+betoh64 = __swap64
+def htole16(x): return (x)
+
+def htole32(x): return (x)
+
+def htole64(x): return (x)
+
+def letoh16(x): return (x)
+
+def letoh32(x): return (x)
+
+def letoh64(x): return (x)
+
+def htons(x): return __swap16(x)
+
+def htonl(x): return __swap32(x)
+
+def ntohs(x): return __swap16(x)
+
+def ntohl(x): return __swap32(x)
+
+def ntohq(x): return __swap64(x)
+
+def htonq(x): return __swap64(x)
+
+_QUAD_HIGHWORD = 0
+_QUAD_LOWWORD = 1
+htole16 = __swap16
+htole32 = __swap32
+htole64 = __swap64
+letoh16 = __swap16
+letoh32 = __swap32
+letoh64 = __swap64
+def htobe16(x): return (x)
+
+def htobe32(x): return (x)
+
+def htobe64(x): return (x)
+
+def betoh16(x): return (x)
+
+def betoh32(x): return (x)
+
+def betoh64(x): return (x)
+
+def htons(x): return (x)
+
+def htonl(x): return (x)
+
+def ntohs(x): return (x)
+
+def ntohl(x): return (x)
+
+def ntohq(x): return (x)
+
+def htonq(x): return (x)
+
+__LITTLE_ENDIAN = _LITTLE_ENDIAN
+__BIG_ENDIAN = _BIG_ENDIAN
+
+# Included from linux/socket.h
+_K_SS_MAXSIZE = 128
+
+# Included from asm/socket.h
+
+# Included from asm/sockios.h
+FIOSETOWN = 0x8901
+SIOCSPGRP = 0x8902
+FIOGETOWN = 0x8903
+SIOCGPGRP = 0x8904
+SIOCATMARK = 0x8905
+SIOCGSTAMP = 0x8906
+SOL_SOCKET = 1
+SO_DEBUG = 1
+SO_REUSEADDR = 2
+SO_TYPE = 3
+SO_ERROR = 4
+SO_DONTROUTE = 5
+SO_BROADCAST = 6
+SO_SNDBUF = 7
+SO_RCVBUF = 8
+SO_SNDBUFFORCE = 32
+SO_RCVBUFFORCE = 33
+SO_KEEPALIVE = 9
+SO_OOBINLINE = 10
+SO_NO_CHECK = 11
+SO_PRIORITY = 12
+SO_LINGER = 13
+SO_BSDCOMPAT = 14
+SO_PASSCRED = 16
+SO_PEERCRED = 17
+SO_RCVLOWAT = 18
+SO_SNDLOWAT = 19
+SO_RCVTIMEO = 20
+SO_SNDTIMEO = 21
+SO_SECURITY_AUTHENTICATION = 22
+SO_SECURITY_ENCRYPTION_TRANSPORT = 23
+SO_SECURITY_ENCRYPTION_NETWORK = 24
+SO_BINDTODEVICE = 25
+SO_ATTACH_FILTER = 26
+SO_DETACH_FILTER = 27
+SO_PEERNAME = 28
+SO_TIMESTAMP = 29
+SCM_TIMESTAMP = SO_TIMESTAMP
+SO_ACCEPTCONN = 30
+SO_PEERSEC = 31
+SO_PASSSEC = 34
+SO_TIMESTAMPNS = 35
+SCM_TIMESTAMPNS = SO_TIMESTAMPNS
+SO_MARK = 36
+SO_TIMESTAMPING = 37
+SCM_TIMESTAMPING = SO_TIMESTAMPING
+SO_PROTOCOL = 38
+SO_DOMAIN = 39
+SO_RXQ_OVFL = 40
+SO_WIFI_STATUS = 41
+SCM_WIFI_STATUS = SO_WIFI_STATUS
+
+# Included from linux/sockios.h
+SIOCADDRT = 0x890B
+SIOCDELRT = 0x890C
+SIOCRTMSG = 0x890D
+SIOCGIFNAME = 0x8910
+SIOCSIFLINK = 0x8911
+SIOCGIFCONF = 0x8912
+SIOCGIFFLAGS = 0x8913
+SIOCSIFFLAGS = 0x8914
+SIOCGIFADDR = 0x8915
+SIOCSIFADDR = 0x8916
+SIOCGIFDSTADDR = 0x8917
+SIOCSIFDSTADDR = 0x8918
+SIOCGIFBRDADDR = 0x8919
+SIOCSIFBRDADDR = 0x891a
+SIOCGIFNETMASK = 0x891b
+SIOCSIFNETMASK = 0x891c
+SIOCGIFMETRIC = 0x891d
+SIOCSIFMETRIC = 0x891e
+SIOCGIFMEM = 0x891f
+SIOCSIFMEM = 0x8920
+SIOCGIFMTU = 0x8921
+SIOCSIFMTU = 0x8922
+SIOCSIFNAME = 0x8923
+SIOCSIFHWADDR = 0x8924
+SIOCGIFENCAP = 0x8925
+SIOCSIFENCAP = 0x8926
+SIOCGIFHWADDR = 0x8927
+SIOCGIFSLAVE = 0x8929
+SIOCSIFSLAVE = 0x8930
+SIOCADDMULTI = 0x8931
+SIOCDELMULTI = 0x8932
+SIOCGIFINDEX = 0x8933
+SIOGIFINDEX = SIOCGIFINDEX
+SIOCSIFPFLAGS = 0x8934
+SIOCGIFPFLAGS = 0x8935
+SIOCDIFADDR = 0x8936
+SIOCSIFHWBROADCAST = 0x8937
+SIOCGIFCOUNT = 0x8938
+SIOCKILLADDR = 0x8939
+SIOCGIFBR = 0x8940
+SIOCSIFBR = 0x8941
+SIOCGIFTXQLEN = 0x8942
+SIOCSIFTXQLEN = 0x8943
+SIOCETHTOOL = 0x8946
+SIOCGMIIPHY = 0x8947
+SIOCGMIIREG = 0x8948
+SIOCSMIIREG = 0x8949
+SIOCWANDEV = 0x894A
+SIOCDARP = 0x8953
+SIOCGARP = 0x8954
+SIOCSARP = 0x8955
+SIOCDRARP = 0x8960
+SIOCGRARP = 0x8961
+SIOCSRARP = 0x8962
+SIOCGIFMAP = 0x8970
+SIOCSIFMAP = 0x8971
+SIOCADDDLCI = 0x8980
+SIOCDELDLCI = 0x8981
+SIOCGIFVLAN = 0x8982
+SIOCSIFVLAN = 0x8983
+SIOCBONDENSLAVE = 0x8990
+SIOCBONDRELEASE = 0x8991
+SIOCBONDSETHWADDR = 0x8992
+SIOCBONDSLAVEINFOQUERY = 0x8993
+SIOCBONDINFOQUERY = 0x8994
+SIOCBONDCHANGEACTIVE = 0x8995
+SIOCBRADDBR = 0x89a0
+SIOCBRDELBR = 0x89a1
+SIOCBRADDIF = 0x89a2
+SIOCBRDELIF = 0x89a3
+SIOCDEVPRIVATE = 0x89F0
+SIOCPROTOPRIVATE = 0x89E0
+
+# Included from linux/uio.h
+
+# Included from linux/compiler.h
+def __cond_lock(x): return (x)
+
+
+# Included from linux/types.h
+
+# Included from linux/posix_types.h
+
+# Included from linux/stddef.h
+NULL = 0
+__FD_SETSIZE = 1024
+def __FDELT(d): return ((d) / __NFDBITS)
+
+
+# Included from asm/posix_types.h
+
+# Included from asm/types.h
+UIO_FASTIOV = 8
+UIO_MAXIOV = 1024
+def CMSG_ALIGN(len): return ( ((len)+sizeof(long)-1) & ~(sizeof(long)-1) )
+
+SCM_RIGHTS = 0x01
+SCM_CREDENTIALS = 0x02
+SCM_SECURITY = 0x03
+AF_UNSPEC = 0
+AF_UNIX = 1
+AF_LOCAL = 1
+AF_INET = 2
+AF_AX25 = 3
+AF_IPX = 4
+AF_APPLETALK = 5
+AF_NETROM = 6
+AF_BRIDGE = 7
+AF_ATMPVC = 8
+AF_X25 = 9
+AF_INET6 = 10
+AF_ROSE = 11
+AF_DECnet = 12
+AF_NETBEUI = 13
+AF_SECURITY = 14
+AF_KEY = 15
+AF_NETLINK = 16
+AF_ROUTE = AF_NETLINK
+AF_PACKET = 17
+AF_ASH = 18
+AF_ECONET = 19
+AF_ATMSVC = 20
+AF_SNA = 22
+AF_IRDA = 23
+AF_PPPOX = 24
+AF_WANPIPE = 25
+AF_LLC = 26
+AF_TIPC = 30
+AF_BLUETOOTH = 31
+AF_MAX = 32
+PF_UNSPEC = AF_UNSPEC
+PF_UNIX = AF_UNIX
+PF_LOCAL = AF_LOCAL
+PF_INET = AF_INET
+PF_AX25 = AF_AX25
+PF_IPX = AF_IPX
+PF_APPLETALK = AF_APPLETALK
+PF_NETROM = AF_NETROM
+PF_BRIDGE = AF_BRIDGE
+PF_ATMPVC = AF_ATMPVC
+PF_X25 = AF_X25
+PF_INET6 = AF_INET6
+PF_ROSE = AF_ROSE
+PF_DECnet = AF_DECnet
+PF_NETBEUI = AF_NETBEUI
+PF_SECURITY = AF_SECURITY
+PF_KEY = AF_KEY
+PF_NETLINK = AF_NETLINK
+PF_ROUTE = AF_ROUTE
+PF_PACKET = AF_PACKET
+PF_ASH = AF_ASH
+PF_ECONET = AF_ECONET
+PF_ATMSVC = AF_ATMSVC
+PF_SNA = AF_SNA
+PF_IRDA = AF_IRDA
+PF_PPPOX = AF_PPPOX
+PF_WANPIPE = AF_WANPIPE
+PF_LLC = AF_LLC
+PF_TIPC = AF_TIPC
+PF_BLUETOOTH = AF_BLUETOOTH
+PF_MAX = AF_MAX
+SOMAXCONN = 128
+MSG_OOB = 1
+MSG_PEEK = 2
+MSG_DONTROUTE = 4
+MSG_TRYHARD = 4
+MSG_CTRUNC = 8
+MSG_PROBE = 0x10
+MSG_TRUNC = 0x20
+MSG_DONTWAIT = 0x40
+MSG_EOR = 0x80
+MSG_WAITALL = 0x100
+MSG_FIN = 0x200
+MSG_SYN = 0x400
+MSG_CONFIRM = 0x800
+MSG_RST = 0x1000
+MSG_ERRQUEUE = 0x2000
+MSG_NOSIGNAL = 0x4000
+MSG_MORE = 0x8000
+MSG_EOF = MSG_FIN
+MSG_CMSG_COMPAT = 0
+SOL_IP = 0
+SOL_TCP = 6
+SOL_UDP = 17
+SOL_IPV6 = 41
+SOL_ICMPV6 = 58
+SOL_SCTP = 132
+SOL_RAW = 255
+SOL_IPX = 256
+SOL_AX25 = 257
+SOL_ATALK = 258
+SOL_NETROM = 259
+SOL_ROSE = 260
+SOL_DECNET = 261
+SOL_X25 = 262
+SOL_PACKET = 263
+SOL_ATM = 264
+SOL_AAL = 265
+SOL_IRDA = 266
+SOL_NETBEUI = 267
+SOL_LLC = 268
+SOL_DCCP = 269
+SOL_NETLINK = 270
+SOL_TIPC = 271
+IPX_TYPE = 1
+
+# Included from linux/in.h
+IP_TOS = 1
+IP_TTL = 2
+IP_HDRINCL = 3
+IP_OPTIONS = 4
+IP_ROUTER_ALERT = 5
+IP_RECVOPTS = 6
+IP_RETOPTS = 7
+IP_PKTINFO = 8
+IP_PKTOPTIONS = 9
+IP_MTU_DISCOVER = 10
+IP_RECVERR = 11
+IP_RECVTTL = 12
+IP_RECVTOS = 13
+IP_MTU = 14
+IP_FREEBIND = 15
+IP_IPSEC_POLICY = 16
+IP_XFRM_POLICY = 17
+IP_PASSSEC = 18
+IP_RECVRETOPTS = IP_RETOPTS
+IP_PMTUDISC_DONT = 0
+IP_PMTUDISC_WANT = 1
+IP_PMTUDISC_DO = 2
+IP_MULTICAST_IF = 32
+IP_MULTICAST_TTL = 33
+IP_MULTICAST_LOOP = 34
+IP_ADD_MEMBERSHIP = 35
+IP_DROP_MEMBERSHIP = 36
+IP_UNBLOCK_SOURCE = 37
+IP_BLOCK_SOURCE = 38
+IP_ADD_SOURCE_MEMBERSHIP = 39
+IP_DROP_SOURCE_MEMBERSHIP = 40
+IP_MSFILTER = 41
+MCAST_JOIN_GROUP = 42
+MCAST_BLOCK_SOURCE = 43
+MCAST_UNBLOCK_SOURCE = 44
+MCAST_LEAVE_GROUP = 45
+MCAST_JOIN_SOURCE_GROUP = 46
+MCAST_LEAVE_SOURCE_GROUP = 47
+MCAST_MSFILTER = 48
+MCAST_EXCLUDE = 0
+MCAST_INCLUDE = 1
+IP_DEFAULT_MULTICAST_TTL = 1
+IP_DEFAULT_MULTICAST_LOOP = 1
+__SOCK_SIZE__ = 16
+IN_CLASSA_NET = 0xff000000
+IN_CLASSA_NSHIFT = 24
+IN_CLASSA_HOST = (0xffffffff & ~IN_CLASSA_NET)
+IN_CLASSA_MAX = 128
+IN_CLASSB_NET = 0xffff0000
+IN_CLASSB_NSHIFT = 16
+IN_CLASSB_HOST = (0xffffffff & ~IN_CLASSB_NET)
+IN_CLASSB_MAX = 65536
+IN_CLASSC_NET = 0xffffff00
+IN_CLASSC_NSHIFT = 8
+IN_CLASSC_HOST = (0xffffffff & ~IN_CLASSC_NET)
+def IN_MULTICAST(a): return IN_CLASSD(a)
+
+IN_MULTICAST_NET = 0xF0000000
+def IN_BADCLASS(a): return IN_EXPERIMENTAL((a))
+
+IN_LOOPBACKNET = 127
+INADDR_LOOPBACK = 0x7f000001
+
+# Included from asm/byteorder.h
+def __arch__swab32(x): return ___arch__swab32(x)
+
+
+# Included from linux/byteorder/big_endian.h
+__BIG_ENDIAN = 4321
+
+# Included from linux/byteorder/swab.h
+def __arch__swab16p(x): return __arch__swab16(*(x))
+
+def __arch__swab32p(x): return __arch__swab32(*(x))
+
+def __arch__swab64p(x): return __arch__swab64(*(x))
+
+def __swab16(x): return __fswab16(x)
+
+def __swab32(x): return __fswab32(x)
+
+def __swab64(x): return __fswab64(x)
+
+def __cpu_to_le64s(x): return __swab64s((x))
+
+def __le64_to_cpus(x): return __swab64s((x))
+
+def __cpu_to_le32s(x): return __swab32s((x))
+
+def __le32_to_cpus(x): return __swab32s((x))
+
+def __cpu_to_le16s(x): return __swab16s((x))
+
+def __le16_to_cpus(x): return __swab16s((x))
+
+
+# Included from linux/byteorder/generic.h
+
+# Included from linux/byteorder/little_endian.h
+__LITTLE_ENDIAN = 1234
+def __cpu_to_be64s(x): return __swab64s((x))
+
+def __be64_to_cpus(x): return __swab64s((x))
+
+def __cpu_to_be32s(x): return __swab32s((x))
+
+def __be32_to_cpus(x): return __swab32s((x))
+
+def __cpu_to_be16s(x): return __swab16s((x))
+
+def __be16_to_cpus(x): return __swab16s((x))
+
+
+# Included from linux/in6.h
+IPV6_FL_A_GET = 0
+IPV6_FL_A_PUT = 1
+IPV6_FL_A_RENEW = 2
+IPV6_FL_F_CREATE = 1
+IPV6_FL_F_EXCL = 2
+IPV6_FL_S_NONE = 0
+IPV6_FL_S_EXCL = 1
+IPV6_FL_S_PROCESS = 2
+IPV6_FL_S_USER = 3
+IPV6_FL_S_ANY = 255
+IPV6_FLOWINFO_FLOWLABEL = 0x000fffff
+IPV6_FLOWINFO_PRIORITY = 0x0ff00000
+IPV6_PRIORITY_UNCHARACTERIZED = 0x0000
+IPV6_PRIORITY_FILLER = 0x0100
+IPV6_PRIORITY_UNATTENDED = 0x0200
+IPV6_PRIORITY_RESERVED1 = 0x0300
+IPV6_PRIORITY_BULK = 0x0400
+IPV6_PRIORITY_RESERVED2 = 0x0500
+IPV6_PRIORITY_INTERACTIVE = 0x0600
+IPV6_PRIORITY_CONTROL = 0x0700
+IPV6_PRIORITY_8 = 0x0800
+IPV6_PRIORITY_9 = 0x0900
+IPV6_PRIORITY_10 = 0x0a00
+IPV6_PRIORITY_11 = 0x0b00
+IPV6_PRIORITY_12 = 0x0c00
+IPV6_PRIORITY_13 = 0x0d00
+IPV6_PRIORITY_14 = 0x0e00
+IPV6_PRIORITY_15 = 0x0f00
+IPPROTO_HOPOPTS = 0
+IPPROTO_ROUTING = 43
+IPPROTO_FRAGMENT = 44
+IPPROTO_ICMPV6 = 58
+IPPROTO_NONE = 59
+IPPROTO_DSTOPTS = 60
+IPV6_TLV_PAD0 = 0
+IPV6_TLV_PADN = 1
+IPV6_TLV_ROUTERALERT = 5
+IPV6_TLV_JUMBO = 194
+IPV6_ADDRFORM = 1
+IPV6_2292PKTINFO = 2
+IPV6_2292HOPOPTS = 3
+IPV6_2292DSTOPTS = 4
+IPV6_2292RTHDR = 5
+IPV6_2292PKTOPTIONS = 6
+IPV6_CHECKSUM = 7
+IPV6_2292HOPLIMIT = 8
+IPV6_NEXTHOP = 9
+IPV6_AUTHHDR = 10
+IPV6_FLOWINFO = 11
+IPV6_UNICAST_HOPS = 16
+IPV6_MULTICAST_IF = 17
+IPV6_MULTICAST_HOPS = 18
+IPV6_MULTICAST_LOOP = 19
+IPV6_ADD_MEMBERSHIP = 20
+IPV6_DROP_MEMBERSHIP = 21
+IPV6_ROUTER_ALERT = 22
+IPV6_MTU_DISCOVER = 23
+IPV6_MTU = 24
+IPV6_RECVERR = 25
+IPV6_V6ONLY = 26
+IPV6_JOIN_ANYCAST = 27
+IPV6_LEAVE_ANYCAST = 28
+IPV6_PMTUDISC_DONT = 0
+IPV6_PMTUDISC_WANT = 1
+IPV6_PMTUDISC_DO = 2
+IPV6_FLOWLABEL_MGR = 32
+IPV6_FLOWINFO_SEND = 33
+IPV6_IPSEC_POLICY = 34
+IPV6_XFRM_POLICY = 35
+IPV6_RECVPKTINFO = 49
+IPV6_PKTINFO = 50
+IPV6_RECVHOPLIMIT = 51
+IPV6_HOPLIMIT = 52
+IPV6_RECVHOPOPTS = 53
+IPV6_HOPOPTS = 54
+IPV6_RTHDRDSTOPTS = 55
+IPV6_RECVRTHDR = 56
+IPV6_RTHDR = 57
+IPV6_RECVDSTOPTS = 58
+IPV6_DSTOPTS = 59
+IPV6_RECVTCLASS = 66
+IPV6_TCLASS = 67
+
+# Included from linux/ipv6.h
+IPV6_MIN_MTU = 1280
+IPV6_SRCRT_STRICT = 0x01
+IPV6_SRCRT_TYPE_0 = 0
+IPV6_SRCRT_TYPE_2 = 2
+
+# Included from netinet/in6.h
+def IN6_IS_ADDR_UNSPECIFIED(a): return \
+
+def IN6_IS_ADDR_LOOPBACK(a): return \
+
+def IN6_IS_ADDR_V4COMPAT(a): return \
+
+def IN6_IS_ADDR_V4MAPPED(a): return \
+
+def IN6_IS_ADDR_LINKLOCAL(a): return \
+
+def IN6_IS_ADDR_SITELOCAL(a): return \
+
+def IN6_IS_ADDR_ULA(a): return \
+
+def IN6_IS_ADDR_MULTICAST(a): return \
+
+IPV6_ADDR_SCOPE_NODELOCAL = 0x01
+IPV6_ADDR_SCOPE_INTFACELOCAL = 0x01
+IPV6_ADDR_SCOPE_LINKLOCAL = 0x02
+IPV6_ADDR_SCOPE_SITELOCAL = 0x05
+IPV6_ADDR_SCOPE_ORGLOCAL = 0x08
+IPV6_ADDR_SCOPE_GLOBAL = 0x0e
+def IPV6_ADDR_MC_SCOPE(a): return \
+
+def IN6_IS_ADDR_MC_NODELOCAL(a): return \
+
+def IN6_IS_ADDR_MC_LINKLOCAL(a): return \
+
+def IN6_IS_ADDR_MC_SITELOCAL(a): return \
+
+def IN6_IS_ADDR_MC_ORGLOCAL(a): return \
+
+def IN6_IS_ADDR_MC_GLOBAL(a): return \
+
+INET6_ADDRSTRLEN = 46
+IPV6_JOIN_GROUP = IPV6_ADD_MEMBERSHIP
+IPV6_LEAVE_GROUP = IPV6_DROP_MEMBERSHIP
+IPPORT_RESERVED = 1024
+INET_ADDRSTRLEN = 16
diff -Nru Python-3.3.3/Lib/plat-linux-android/regen Python-3.3.3-android/Lib/plat-linux-android/regen
--- Python-3.3.3/Lib/plat-linux-android/regen	1970-01-01 00:00:00.000000000 +0000
+++ Python-3.3.3-android/Lib/plat-linux-android/regen	2014-08-02 14:17:52.266146965 +0000
@@ -0,0 +1,3 @@
+#! /bin/sh
+set -v
+eval $PYTHON_FOR_BUILD ../../Tools/scripts/h2py.py -i "'(u_long)'" /usr/include/sys/types.h /usr/include/netinet/in.h /usr/include/dlfcn.h
diff -Nru Python-3.3.3/Lib/plat-linux-android/TYPES.py Python-3.3.3-android/Lib/plat-linux-android/TYPES.py
--- Python-3.3.3/Lib/plat-linux-android/TYPES.py	1970-01-01 00:00:00.000000000 +0000
+++ Python-3.3.3-android/Lib/plat-linux-android/TYPES.py	2014-08-02 14:22:53.922146298 +0000
@@ -0,0 +1,247 @@
+# Generated by h2py from /usr/src/unprivcompile/python-android/build-tools/sysroot/usr/include/sys/types.h
+
+# Included from stdint.h
+
+# Included from sys/_types.h
+__KERNEL_STRICT_NAMES = 1
+
+# Included from machine/_types.h
+__KERNEL_STRICT_NAMES = 1
+INT8_MIN = (-128)
+INT8_MAX = (127)
+INT_LEAST8_MIN = INT8_MIN
+INT_LEAST8_MAX = INT8_MAX
+INT_FAST8_MIN = INT8_MIN
+INT_FAST8_MAX = INT8_MAX
+UINT8_MAX = (255)
+UINT_LEAST8_MAX = UINT8_MAX
+UINT_FAST8_MAX = UINT8_MAX
+def INT8_C(c): return c
+
+def INT_LEAST8_C(c): return INT8_C(c)
+
+def INT_FAST8_C(c): return INT8_C(c)
+
+def UINT8_C(c): return c
+
+def UINT_LEAST8_C(c): return UINT8_C(c)
+
+def UINT_FAST8_C(c): return UINT8_C(c)
+
+INT16_MIN = (-32768)
+INT16_MAX = (32767)
+INT_LEAST16_MIN = INT16_MIN
+INT_LEAST16_MAX = INT16_MAX
+UINT16_MAX = (65535)
+UINT_LEAST16_MAX = UINT16_MAX
+def INT16_C(c): return c
+
+def INT_LEAST16_C(c): return INT16_C(c)
+
+def INT_FAST16_C(c): return INT32_C(c)
+
+def UINT16_C(c): return c
+
+def UINT_LEAST16_C(c): return UINT16_C(c)
+
+def UINT_FAST16_C(c): return UINT32_C(c)
+
+INT32_MIN = (-2147483647-1)
+INT32_MAX = (2147483647)
+INT_LEAST32_MIN = INT32_MIN
+INT_LEAST32_MAX = INT32_MAX
+INT_FAST32_MIN = INT32_MIN
+INT_FAST32_MAX = INT32_MAX
+def INT32_C(c): return c
+
+def INT_LEAST32_C(c): return INT32_C(c)
+
+def INT_FAST32_C(c): return INT32_C(c)
+
+def UINT32_C(c): return c ## U
+
+def UINT_LEAST32_C(c): return UINT32_C(c)
+
+def UINT_FAST32_C(c): return UINT32_C(c)
+
+def __INT64_C(c): return c ## LL
+
+def __UINT64_C(c): return c ## ULL
+
+def INT64_C(c): return __INT64_C(c)
+
+def INT_LEAST64_C(c): return INT64_C(c)
+
+def INT_FAST64_C(c): return INT64_C(c)
+
+def UINT64_C(c): return __UINT64_C(c)
+
+def UINT_LEAST64_C(c): return UINT64_C(c)
+
+def UINT_FAST64_C(c): return UINT64_C(c)
+
+__PRI64_RANK = "ll"
+__PRIFAST_RANK = ""
+__PRIPTR_RANK = ""
+INTPTR_MIN = INT32_MIN
+INTPTR_MAX = INT32_MAX
+PTRDIFF_MIN = INT32_MIN
+PTRDIFF_MAX = INT32_MAX
+def INTPTR_C(c): return INT32_C(c)
+
+def UINTPTR_C(c): return UINT32_C(c)
+
+def PTRDIFF_C(c): return INT32_C(c)
+
+def INTMAX_C(c): return INT64_C(c)
+
+def UINTMAX_C(c): return UINT64_C(c)
+
+SIG_ATOMIC_MIN = INT32_MIN
+SIG_ATOMIC_MAX = INT32_MAX
+
+# Included from sys/_wchar_limits.h
+
+# Included from android/api-level.h
+__ANDROID_API__ = 19
+WCHAR_MIN = 0
+WCHAR_MAX = 255
+WCHAR_MIN = (-2147483647 - 1)
+WCHAR_MAX = (2147483647)
+WCHAR_MIN = (-2147483647 - 1)
+WCHAR_MAX = (2147483647)
+__WCHAR_MIN__ = (-2147483647 - 1)
+WCHAR_MIN = __WCHAR_MIN__
+WINT_MIN = INT32_MIN
+WINT_MAX = INT32_MAX
+_BITSIZE = 32
+
+# Included from sys/cdefs.h
+
+# Included from sys/cdefs_elf.h
+def _C_LABEL(x): return __CONCAT(_,x)
+
+def _C_LABEL(x): return x
+
+def _C_LABEL_STRING(x): return x
+
+def ___RENAME(x): return __asm__(___STRING(_C_LABEL(x)))
+
+def ____RENAME(x): return __asm__(___STRING(x))
+
+def ___RENAME(x): return __asm__(___STRING(x))
+
+def __weak_extern(sym): return \
+
+def ___weak_extern(sym): return \
+
+def __weak_extern(sym): return \
+
+def __RCSID(_s): return __IDSTRING(rcsid,_s)
+
+def __COPYRIGHT(_s): return \
+
+def __link_set_count(set): return \
+
+def ___STRING(x): return __STRING(x)
+
+def __P(protos): return protos		 
+
+def __STRING(x): return #x
+
+def __P(protos): return ()		 
+
+def __STRING(x): return "x"
+
+def __attribute__(x): return  
+
+def __aligned(x): return __attribute__((__aligned__(x)))
+
+def __section(x): return __attribute__((__section__(x)))
+
+def __aligned(x): return  
+
+def __section(x): return  
+
+def __statement(x): return __extension__(x)
+
+def __statement(x): return (0)
+
+def __statement(x): return (x)
+
+__func__ = ""
+def __RENAME(x): return ___RENAME(x)
+
+def __RENAME(x): return __symbolrename(x)
+
+def __predict_true(exp): return __builtin_expect((exp) != 0, 1)
+
+def __predict_false(exp): return __builtin_expect((exp) != 0, 0)
+
+def __predict_true(exp): return (exp)
+
+def __predict_false(exp): return (exp)
+
+_POSIX_C_SOURCE = 199009
+_POSIX_C_SOURCE = 199209
+__XSI_VISIBLE = 700
+_POSIX_C_SOURCE = 200809
+__XSI_VISIBLE = 600
+_POSIX_C_SOURCE = 200112
+__XSI_VISIBLE = 500
+_POSIX_C_SOURCE = 199506
+_POSIX_C_SOURCE = 198808
+__POSIX_VISIBLE = 200809
+__ISO_C_VISIBLE = 1999
+__POSIX_VISIBLE = 200112
+__ISO_C_VISIBLE = 1999
+__POSIX_VISIBLE = 199506
+__ISO_C_VISIBLE = 1990
+__POSIX_VISIBLE = 199309
+__ISO_C_VISIBLE = 1990
+__POSIX_VISIBLE = 199209
+__ISO_C_VISIBLE = 1990
+__POSIX_VISIBLE = 199009
+__ISO_C_VISIBLE = 1990
+__POSIX_VISIBLE = 198808
+__ISO_C_VISIBLE = 0
+__POSIX_VISIBLE = 0
+__XSI_VISIBLE = 0
+__BSD_VISIBLE = 0
+__ISO_C_VISIBLE = 1990
+__POSIX_VISIBLE = 0
+__XSI_VISIBLE = 0
+__BSD_VISIBLE = 0
+__ISO_C_VISIBLE = 1999
+__POSIX_VISIBLE = 200809
+__XSI_VISIBLE = 700
+__BSD_VISIBLE = 1
+__ISO_C_VISIBLE = 1999
+__XPG_VISIBLE = 700
+__POSIX_VISIBLE = 200809
+__ISO_C_VISIBLE = 1999
+__BSD_VISIBLE = 1
+__BIONIC__ = 1
+
+# Included from linux/posix_types.h
+
+# Included from linux/stddef.h
+
+# Included from linux/compiler.h
+def __cond_lock(x): return (x)
+
+NULL = 0
+__FD_SETSIZE = 1024
+def __FDELT(d): return ((d) / __NFDBITS)
+
+
+# Included from asm/posix_types.h
+
+# Included from asm/types.h
+
+# Included from linux/types.h
+
+# Included from machine/kernel.h
+
+# Included from sys/sysmacros.h
+from TYPES import *
diff -ru Python-3.3.3/Lib/platform.py Python-3.3.3-android/Lib/platform.py
--- Python-3.3.3/Lib/platform.py    2014-08-02 01:06:27.270251856 +0000
+++ Python-3.3.3-android/Lib/platform.py    2014-08-02 01:08:46.374251549 +0000
@@ -195,13 +195,19 @@
     f.close()
     return lib,version
 
+_android_environment_vars = (
+    'ANDROID_ROOT', 'ANDROID_ASSETS', 'ANDROID_STORAGE', 'ANDROID_DATA',
+    'ANDROID_PROPERTY_WORKSPACE', 'ANDROID_BOOTLOGO')
+_android_version_property = 'ro.build.version.release'
+_android_id_property = 'ro.build.version.full'
+
 def _dist_try_harder(distname,version,id):
 
     """ Tries some special tricks to get the distribution
         information in case the default method fails.
 
         Currently supports older SuSE Linux, Caldera OpenLinux and
-        Slackware Linux distributions.
+        Slackware Linux distributions, as well as Android.
 
     """
     if os.path.exists('/var/adm/inst-log/info'):
@@ -241,6 +247,49 @@
             version = verfiles[-1][14:]
             return distname,version,id
 
+    # Android exposes a bunch of environment variables, if at least one of
+    # them is present, we can safely assume we're on an Android device.
+    is_android = False
+    for envvar in _android_environment_vars:
+        if os.getenv(envvar) is not None:
+            is_android = True
+            break
+
+    if is_android:
+        distname = 'Android'
+        
+        # Try the 'official' API tool first, since /system/build.prop might
+        # not be the only source.
+        if os.access('/system/bin/getprop', os.X_OK):
+            try:
+                output = subprocess.check_output(['/system/bin/getprop',
+                                                  _android_version_property])
+                version = output.decode('ascii').strip()
+            except (subprocess.CalledProcessError, UnicodeDecodeError):
+                pass
+
+            try:
+                output = subprocess.check_output(['/system/bin/getprop',
+                                                  _android_id_property])
+                id = output.decode('ascii').strip()
+            except (subprocess.CalledProcessError, UnicodeDecodeError):
+                pass
+
+        # Fall back to parsing /system/build.prop manually.
+        elif os.path.isfile('/system/build.prop'):
+            for line in open('/system/build.prop'):
+                if '=' not in line:
+                    continue
+                key, val = line.split('=')
+                key = key.strip()
+
+                if key == _android_version_property:
+                    version = val.strip()
+                elif key == _android_id_property:
+                    id = val.strip()
+
+        return distname,version,id
+
     return distname,version,id
 
 _release_filename = re.compile(r'(\w+)[-_](release|version)', re.ASCII)
