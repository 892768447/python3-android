diff -ru Python-3.3.3/setup.py Python-3.3.3-android/setup.py
--- Python-3.3.3/setup.py      2013-11-17 07:23:09.000000000 +0000
+++ Python-3.3.3-android/setup.py      2014-07-31 16:34:13.470875893 +0000
@@ -562,7 +562,7 @@
                                libraries=math_libs) )
 
         # time libraries: librt may be needed for clock_gettime()
-        time_libs = []
+        time_libs = ['m']
         lib = sysconfig.get_config_var('TIMEMODULE_LIB')
         if lib:
             time_libs.append(lib)
diff -ru Python-3.3.3/setup.py Python-3.3.3-android/setup.py
--- Python-3.3.3/setup.py	2014-07-31 19:47:32.982850271 +0000
+++ Python-3.3.3-android/setup.py	2014-07-31 19:46:45.698850375 +0000
@@ -639,7 +639,8 @@
         # Operations on audio samples
         # According to #993173, this one should actually work fine on
         # 64-bit platforms.
-        exts.append( Extension('audioop', ['audioop.c']) )
+        exts.append( Extension('audioop', ['audioop.c'],
+                               libraries=['m']) )
 
         # readline
         do_readline = self.compiler.find_library_file(lib_dirs, 'readline')
@@ -1904,7 +1905,8 @@
                         sources=sources,
                         depends=depends)
         ext_test = Extension('_ctypes_test',
-                             sources=['_ctypes/_ctypes_test.c'])
+                             sources=['_ctypes/_ctypes_test.c'],
+                             libraries=['m'])
         self.extensions.extend([ext, ext_test])
 
         if not '--with-system-ffi' in sysconfig.get_config_var("CONFIG_ARGS"):
diff -ru Python-3.3.3/Modules/python.c Python-3.3.3-android/Modules/python.c
--- Python-3.3.3/Modules/python.c	2013-11-17 07:23:01.000000000 +0000
+++ Python-3.3.3-android/Modules/python.c	2014-07-31 13:19:07.042901752 +0000
@@ -42,7 +42,11 @@
     m = fpgetmask();
     fpsetmask(m & ~FP_X_OFL);
 #endif
-    oldloc = strdup(setlocale(LC_ALL, NULL));
+    oldloc = setlocale(LC_ALL, NULL);
+    if (oldloc != NULL) {
+        oldloc = strdup(oldloc);
+    }
+
     setlocale(LC_ALL, "");
     for (i = 0; i < argc; i++) {
         argv_copy[i] = _Py_char2wchar(argv[i], NULL);
@@ -57,8 +61,10 @@
     }
     argv_copy2[argc] = argv_copy[argc] = NULL;
 
-    setlocale(LC_ALL, oldloc);
-    free(oldloc);
+    if (oldloc != NULL) {
+        setlocale(LC_ALL, oldloc);
+        free(oldloc);
+    }
     res = Py_Main(argc, argv_copy);
     for (i = 0; i < argc; i++) {
         PyMem_Free(argv_copy2[i]);
diff -ru Python-3.3.3/Lib/test/test_pwd.py Python-3.3.3-android/Lib/test/test_pwd.py
--- Python-3.3.3/Lib/test/test_pwd.py 2013-11-17 07:22:47.000000000 +0000
+++ Python-3.3.3-android/Lib/test/test_pwd.py 2014-08-02 00:38:56.106255504 +0000
@@ -6,6 +6,7 @@
 
 class PwdTest(unittest.TestCase):
 
+ @unittest.skipUnless(hasattr(pwd, 'getpwall'), 'pwd module does not expose getpwall()')
     def test_values(self):
         entries = pwd.getpwall()
         entriesbyname = {}
@@ -47,6 +48,7 @@
             self.assertIn(pwd.getpwnam(e.pw_name), entriesbyname[e.pw_name])
             self.assertIn(pwd.getpwuid(e.pw_uid), entriesbyuid[e.pw_uid])
 
+ @unittest.skipUnless(hasattr(pwd, 'getpwall'), 'pwd module does not expose getpwall()')
     def test_errors(self):
         self.assertRaises(TypeError, pwd.getpwuid)
         self.assertRaises(TypeError, pwd.getpwuid, 3.14)
diff -ru Python-3.3.3/Lib/distutils/tests/test_dist.py Python-3.3.3-android/Lib/distutils/tests/test_dist.py
--- Python-3.3.3/Lib/distutils/tests/test_dist.py       2013-11-17 07:22:31.000000000 +0000
+++ Python-3.3.3-android/Lib/distutils/tests/test_dist.py       2014-08-02 13:40:48.190151877 +0000
@@ -353,7 +353,7 @@
             dist = Distribution()
 
             # linux-style
-            if sys.platform in ('linux', 'darwin'):
+            if sys.platform.startswith('linux') or sys.platform == 'darwin':
                 os.environ['HOME'] = temp_dir
                 files = dist.find_config_files()
                 self.assertIn(user_filename, files)
diff -ru Python-3.3.3/Lib/test/test_logging.py Python-3.3.3-android/Lib/test/test_logging.py
--- Python-3.3.3/Lib/test/test_logging.py       2013-11-17 07:22:46.000000000 +0000
+++ Python-3.3.3-android/Lib/test/test_logging.py       2014-08-02 13:44:49.086151345 +0000
@@ -526,7 +526,7 @@
     def test_builtin_handlers(self):
         # We can't actually *use* too many handlers in the tests,
         # but we can try instantiating them with various options
-        if sys.platform in ('linux', 'darwin'):
+        if sys.platform.starswith('linux') or sys.platform == 'darwin':
             for existing in (True, False):
                 fd, fn = tempfile.mkstemp()
                 os.close(fd)
diff -ru Python-3.3.3/Lib/test/test_socket.py Python-3.3.3-android/Lib/test/test_socket.py
--- Python-3.3.3/Lib/test/test_socket.py        2013-11-17 07:22:47.000000000 +0000
+++ Python-3.3.3-android/Lib/test/test_socket.py        2014-08-02 13:44:13.466151424 +0000
@@ -824,8 +824,8 @@
         # Find one service that exists, then check all the related interfaces.
         # I've ordered this by protocols that have both a tcp and udp
         # protocol, at least for modern Linuxes.
-        if (sys.platform.startswith(('freebsd', 'netbsd'))
-            or sys.platform in ('linux', 'darwin')):
+        if (sys.platform.startswith(('freebsd', 'netbsd', 'linux'))
+            or sys.platform == 'darwin'):
             # avoid the 'echo' service on this platform, as there is an
             # assumption breaking non-standard port/protocol entry
             services = ('daytime', 'qotd', 'domain')
@@ -2021,7 +2021,7 @@
     # Linux supports MSG_DONTWAIT when sending, but in general, it
     # only works when receiving.  Could add other platforms if they
     # support it too.
-    @skipWithClientIf(sys.platform not in {"linux2"},
+    @skipWithClientIf(not sys.platform.startswith('linux'),
                       "MSG_DONTWAIT not known to work on this platform when "
                       "sending")
     def testSendmsgDontWait(self):
@@ -4846,7 +4846,7 @@
         tests.append(BasicSocketPairTest)
     if hasattr(socket, "AF_UNIX"):
         tests.append(TestUnixDomain)
-    if sys.platform == 'linux':
+    if sys.platform.startswith('linux'):
         tests.append(TestLinuxAbstractNamespace)
     if isTipcAvailable():
         tests.append(TIPCTest)
diff -ru Python-3.3.3/Tools/scripts/h2py.py Python-3.3.3-android/Tools/scripts/h2py.py
--- Python-3.3.3/Tools/scripts/h2py.py	2013-11-17 07:23:09.000000000 +0000
+++ Python-3.3.3-android/Tools/scripts/h2py.py	2014-08-02 14:22:28.762146354 +0000
@@ -29,7 +29,7 @@
   '^[\t ]*#[\t ]*define[\t ]+'
   '([a-zA-Z0-9_]+)\(([_a-zA-Z][_a-zA-Z0-9]*)\)[\t ]+')
 
-p_include = re.compile('^[\t ]*#[\t ]*include[\t ]+<([a-zA-Z0-9_/\.]+)')
+p_include = re.compile('^[\t ]*#[\t ]*include[\t ]+<([a-zA-Z0-9_/\.-]+)')
 
 p_comment = re.compile(r'/\*([^*]+|\*+[^/])*(\*+/)?')
 p_cpp_comment = re.compile('//.*')
