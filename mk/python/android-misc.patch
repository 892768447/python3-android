diff -r 89116bd505cb Lib/platform.py
--- a/Lib/platform.py	Wed May 04 12:00:32 2016 -0400
+++ b/Lib/platform.py	Thu May 05 03:03:06 2016 +0800
@@ -690,6 +690,52 @@
 
     return release, vendor, vminfo, osinfo
 
+def _android_getprop(prop, default):
+    # On Android 4.1, `getprop` relies on an inherited file descriptor to
+    # gain access to the system property area. The id of this file descriptor
+    # is stored in the environment variable ANDROID_PROPERTY_WORKSPACE
+    pass_fds = ()
+    android_property_workspace = os.getenv('ANDROID_PROPERTY_WORKSPACE', '')
+    if ',' in android_property_workspace:
+        try:
+            pass_fds = (int(android_property_workspace.split(',')[0]),)
+        except ValueError:
+            pass
+
+    try:
+        return subprocess.check_output(['getprop', prop],
+                pass_fds=pass_fds).decode('utf-8').strip()
+    except OSError:
+        return default
+
+def android_ver(version='', sdk=0, versioninfo=('', ''), hardwareinfo=('', '')):
+    """ Attempt to get the Android version information.
+
+        The function checks Android system properties to retrieve info.
+
+        Returns a (version, sdk, versioninfo, hardwareinfo) tuple with
+        versioninfo being a (codename, incremental) tuple and hardwareinfo
+        being a (boardname, abi) tuple.
+
+        Values which cannot be determined are set to the defaults
+        given as parameters (which sdk defaults to 0 and others default to '').
+    """
+
+    version = _android_getprop('ro.build.version.release', version)
+    sdk = int(_android_getprop('ro.build.version.sdk', str(sdk)))
+
+    codename, incremental = versioninfo
+    codename = _android_getprop('ro.build.version.codename', codename)
+    incremental = _android_getprop('ro.build.version.incremental', incremental)
+    versioninfo = codename, incremental
+
+    boardname, abi = hardwareinfo
+    boardname = _android_getprop('ro.product.board', boardname)
+    abi = _android_getprop('ro.product.cpu.abi', abi)
+    hardwareinfo = boardname, abi
+
+    return version, sdk, versioninfo, hardwareinfo
+
 ### System name aliasing
 
 def system_alias(system, release, version):
diff -ru Python-3.3.5/Lib/subprocess.py Python-3.3.5-android/Lib/subprocess.py
--- Python-3.3.5/Lib/subprocess.py	2014-03-09 09:40:13.000000000 +0100
+++ Python-3.3.5-android/Lib/subprocess.py	2014-08-04 22:19:36.000000000 +0200
@@ -1343,9 +1343,18 @@
                 args = list(args)

             if shell:
-                args = ["/bin/sh", "-c"] + args
                 if executable:
-                    args[0] = executable
+                    main = executable
+                elif os.path.isfile('/bin/sh'):
+                    main = '/bin/sh'
+                else:
+                    import platform
+                    if platform.android_ver()[0]:
+                        main = '/system/bin/sh'
+                    else:
+                        raise RuntimeError('Could not find system shell')
+
+                args = [main, "-c"] + args

             if executable is None:
                 executable = args[0]
diff -ru  cpython-fac5562ae9c6/configure.ac.orig cpython-fac5562ae9c6/configure.ac
--- cpython-fac5562ae9c6/configure.ac.orig	2015-11-24 14:19:12.000000000 +0800
+++ cpython-fac5562ae9c6/configure.ac	2015-11-24 16:39:35.356301199 +0800
@@ -1109,7 +1094,14 @@
 	  LDLIBRARY='libpython$(LDVERSION).so'
 	  BLDLIBRARY='-L. -lpython$(LDVERSION)'
	  RUNSHARED=LD_LIBRARY_PATH=`pwd`${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
-	  INSTSONAME="$LDLIBRARY".$SOVERSION
+
+	  if [ -z "$ANDROID_API_LEVEL" ]
+	  then
+		INSTSONAME="$LDLIBRARY".$SOVERSION
+	  else
+		INSTSONAME="$LDLIBRARY"
+	  fi
+
 	  if test "$with_pydebug" != yes
           then
 	      PY3LIBRARY=libpython3.so
