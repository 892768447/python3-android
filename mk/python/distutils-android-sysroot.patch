diff --git a/Lib/distutils/unixccompiler.py b/Lib/distutils/unixccompiler.py
--- a/Lib/distutils/unixccompiler.py
+++ b/Lib/distutils/unixccompiler.py
@@ -108,16 +108,18 @@ class UnixCCompiler(CCompiler):
             except DistutilsExecError as msg:
                 raise CompileError(msg)
 
     def _compile(self, obj, src, ext, cc_args, extra_postargs, pp_opts):
         compiler_so = self.compiler_so
         if sys.platform == 'darwin':
             compiler_so = _osx_support.compiler_fixup(compiler_so,
                                                     cc_args + extra_postargs)
+        if sysconfig.get_config_var('ANDROID_API_LEVEL') > 0 and os.getenv('UNIFIED_SYSROOT'):
+            cc_args += ['--sysroot=' + os.environ['UNIFIED_SYSROOT']]
         try:
             self.spawn(compiler_so + cc_args + [src, '-o', obj] +
                        extra_postargs)
         except DistutilsExecError as msg:
             raise CompileError(msg)
 
     def create_static_lib(self, objects, output_libname,
                           output_dir=None, debug=0, target_lang=None):
@@ -188,16 +190,19 @@ class UnixCCompiler(CCompiler):
                         i = 1
                         while '=' in linker[i]:
                             i += 1
                     linker[i] = self.compiler_cxx[i]
 
                 if sys.platform == 'darwin':
                     linker = _osx_support.compiler_fixup(linker, ld_args)
 
+                if sysconfig.get_config_var('ANDROID_API_LEVEL') > 0 and os.getenv('ARCH_SYSROOT'):
+                    ld_args += ['--sysroot=' + os.environ['ARCH_SYSROOT']]
+
                 self.spawn(linker + ld_args)
             except DistutilsExecError as msg:
                 raise LinkError(msg)
         else:
             log.debug("skipping %s (up-to-date)", output_filename)
 
     # -- Miscellaneous methods -----------------------------------------
     # These are all used by the 'gen_lib_options() function, in
